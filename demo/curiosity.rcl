node Agent
{
//input: msg?, output of R and n in NATURAL and Wayp = < w1 upto wn > and W = Wayp
//output: act

topics()

assume( Guarantee_of(R) )

// equals or assignment?
// Also...what the hell is this?
guarantee( W == Wayp <=> W == {} )

// I think "act = patrol.." here should be an assignment
// from diagram: %when it receives start from rosbridge it sends the message to patrol the first waypoint
//guarantee( start -> act = patrol(w1) and w1 !in W )
guarantee( msg ==  start -> act == patrol(w1) and w1 !in W )

// from diagram: %when it receives a success move result message, then it sends the message to patrol the next waypoint
// Again, I think "act = patrol..." should be assignment. Also, what the hell? Why is this "patrol(w1)" again!?
guarantee( move_result == TRUE -> act == patrol(w1) and w1 !in W )
}

node Rosbridge
{
//input: output of A and output of As and output of Ms and output of Ws
//output: msg

topics()

assume( Guarantee_of(A) and Guarantee_of(As) and Guarantee_of(Ms) and Guarantee_of(Ws) )

//I think the "msg = ..." should be assignments
guarantee(msg == act or msg == output_of(As) or msg == output_of(Ms) or msg == output_of(Ws) )
}

node ArmClient
{
//input: output of R and output of As
//output: Amsg = (g, f, r)

topics()

assume( Guarantee_of(R) and Guarantee_of(As) )

// I think this should be an assignment
// What is "g"
guarantee( g == act)
}

node ArmServer
{

//input: output of Ac
//output: r in {TRUE, FALSE}

topics()

assume(Guarantee_of(Ac))

guarantee(r == TRUE -> executed(g) == TRUE )
}

node MastClient
{
//input: output of Or and output of Ms
//output: Amsg = (g, f, r)

topics()

assume(Guarantee_of(R) and Guarantee_of(Ms) )

// I think this should be an assignment
// What is "g"
guarantee(g == act)
}

node MastServer
{
//input: output of Mc
//output: r in {TRUE, FALSE}

topics()

assume(Guarantee_of(Mc))

guarantee(r == TRUE -> executed(g) == TRUE)
}

node WheelsClient
{
//input: output of R and output of Ws
//output: Amsg =(g, f, r)

topics()

assume(Guarantee_of(R) and Guarantee_of(Ws) )

// I think this should be an assignment
// What is "g"
guarantee( g == act)
}

node WheelsServer
{
//input: output of Wc
//output: r in {TRUE, FALSE}

topics()

assume(Guarantee_of(Wc) )

guarantee( r == TRUE -> executed(g) == TRUE )
}
