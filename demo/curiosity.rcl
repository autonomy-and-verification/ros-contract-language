types
{
  MessageType : (g, f, r) ;
  Wayp : < w1 upto wn > ;
}

node Agent
{
inputs (msg : MISSING_TYPE , n : NATURAL , w : Wayp)
outputs (act : MISSING_TYPE)

topics()

assume( Guarantee_of(R) )

// equals or assignment?
// Also...what the hell is this?
//guarantee( w == Wayp <=> w == {} )

// I think "act = patrol.." here should be an assignment
// from diagram: %when it receives start from rosbridge it sends the message to patrol the first waypoint
//guarantee( start -> act = move_to(w1) and w1 !in W )
//guarantee( msg ==  start -> act == move_to(w1) and w1 !in w )

// from diagram: %when it receives a success move result message, then it sends the message to patrol the next waypoint
// Again, I think "act = patrol..." should be assignment. Also, what the hell? Why is this "patrol(w1)" again!?
//guarantee( move_result == TRUE -> act == move_to(w1) and w1 !in w )



guarantee( windy(w) <->  arm_retract == TRUE and mast_down == TRUE )

guarantee( move_to(w) <-> low_rad(w) )

guarantee( forall(w in Wayp | move_to(w) -> wheels_result == TRUE ) ) // implicitly assumes that move_result relates to move_to(w)
}

node EnvironmentInterface
{
// as.r, ms.r, ws.r...
inputs (act : MISSING_TYPE , r : BOOl , r : BOOl , r : BOOl)
outputs ( msg : MISSING_TYPE)

topics()

assume( Guarantee_of(A) and Guarantee_of(As) and Guarantee_of(Ms) and Guarantee_of(Ws) )

//I think the "msg = ..." should be assignments
// as.r, ms.r, ws.r...
guarantee(msg == act or msg == r or msg == r or msg == r )
}

node ArmClient
{
inputs ( msg : MISSING_TYPE , r: BOOL)
outputs (a_msg : MessageType  )

topics()

assume( Guarantee_of(R) and Guarantee_of(As) )

// I think this should be an assignment
// What is "g"
guarantee( g == act)
}

node ArmServer
{

inputs ( a_msg : MessageType)
outputs ( r : BOOl )

topics()

assume(Guarantee_of(Ac))

guarantee(r == TRUE -> executed(g) == TRUE )
}

node MastClient
{
inputs ( msg : MISSING_TYPE , r: BOOL)
outputs (a_msg : MessageType  )

topics()

assume(Guarantee_of(R) and Guarantee_of(Ms) )

// I think this should be an assignment
// What is "g"
guarantee(g == act)
}

node MastServer
{
inputs ( a_msg : MessageType)
outputs ( r : BOOl )

topics()

assume(Guarantee_of(Mc))

guarantee(r == TRUE -> executed(g) == TRUE)
}

node WheelsClient
{
inputs ( msg : MISSING_TYPE , r: BOOL)
outputs (a_msg : MessageType  )

topics()

assume(Guarantee_of(R) and Guarantee_of(Ws) )

// I think this should be an assignment
// What is "g"
guarantee( g == act)
}

node WheelsServer
{
inputs ( a_msg : MessageType)
outputs ( r : BOOL)

topics()

assume( g == act)

guarantee( r == TRUE -> executed(g) == TRUE )
}
