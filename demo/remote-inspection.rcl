context
{
 WayP : REAL x REAL --> NATURAL ;
 RadStat : {red, orange, green} ;
 CommandSet : { move(REAL, REAL), inspect(NATURAL) };
 PositionType : REAL x REAL --> BOOL ;
 AtType: REAL x REAL --> BOOL;
 InspectedType :  NATURAL --> BOOL;
 SensorsType : {};

}

node agent
{

inputs( wayP : WayP, at : AtType, radiationStatus : RadStat, inspected : InspectedType )

outputs( command : CommandSet  )

topics(
gazebo_radiation_plugins/Snapshot command matches(out.command),
gazebo_radiation_plugins/Snapshot inspected matches(in.inspected),
gazebo_radiation_plugins/Snapshot at matches(in.at),
gazebo_radiation_plugins/Snapshot wayPNow matches(wayP),
gazebo_radiation_plugins/Snapshot radiationStatus matches(in.radiationStatus)
)

assume( in.radiationStatus in {red, orange, green} )

guarantee(
forall(x', y' in REAL, i in NATURAL |
  in.at(x', y') == TRUE and in.wayP(x', y') == i and in.inspected(i) == TRUE and in.radiationStatus !in {red, orange} ->
  exists(x, y in REAL |
    (in.wayP(x, y) == i + 1  or (forall( x'', y'' in REAL | in.wayP (x'', y'') != i+1 and in.wayP(x, y) == 0)))
    and out.command == move(x, y)
  )
)
)

guarantee(
forall(x', y' in REAL, i in NATURAL |
  in.at(x', y') == TRUE and in.wayP(x', y') == i and in.inspected(i) == FALSE -> out.command == inspect(i)
)
)

guarantee(
forall(x', y' in REAL, i in NATURAL |
  in.radiationStatus in {red, orange} or not exists( x, y in REAL | in.wayP(x, y) == i + 1 )
  -> exists (x'', y'' in REAL | in.wayP(x'', y'') == 0 and out.command == move(x'', y'') )
  )
)
}


node localisation
{

inputs( sensors: SensorsType )
outputs( position : PositionType )

//input or output?
topics(gazebo_radiation_plugins/Snapshot position matches(out.position))

assume(TRUE)

guarantee( exists_unique(x, y in REAL | out.position(x, y) == TRUE ) )

}

node navigation
{

inputs( position : PositionType, command : CommandSet )

outputs( at: AtType )

topics(
gazebo_radiation_plugins/Snapshot command matches(in.command),
gazebo_radiation_plugins/Snapshot currentLoc matches(in.position),
gazebo_radiation_plugins/Snapshot at matches(out.at))

assume(exists_unique(x, y in REAL | in.position(x,y) == TRUE ) )

guarantee(forall(x, y in REAL | in.command == move(x, y) and in.position(x, y) == TRUE <=> out.at(x, y) == TRUE) )

}


node radiationSensor
{

inputs( r : REAL , command : CommandSet)

outputs( radiationStatus : RadStat, inspected : InspectedType  )


topics(gazebo_radiation_plugins/Snapshot r matches(r),
gazebo_radiation_plugins/Snapshot command matches(in.command),
gazebo_radiation_plugins/Snapshot inspected matches(inspected),
gazebo_radiation_plugins/Snapshot radiationStatus matches(out.radiationStatus) )

assume( 0 <= in.r )

guarantee(
forall( i in NATURAL | in.command == inspect(i) ->
(out.inspected(i) == TRUE
and 0 <= in.r and in.r < 120 -> out.radiationStatus == green
and 120 <= in.r and in.r < 250 -> out.radiationStatus == orange
and 250 <= in.r -> out.radiationStatus == red )
)
)

}
