//Currently not imported into rcl.lark becasue I'm not able to work ou how to.

start: formula

formula: atomic_formula
        | "not" formula
        | formula "and" formula
        | formula "or" formula
        | formula "->" formula
        | formula "<=>" formula
        | "(" formula ")"
        | "forall" VARIABLE formula
        | "exists" VARIABLE formula

atomic_formula  : "TRUE"
                | "FALSE"
                | term "==" term -> equals
                | term "!=" term -> not_equals
                | PRED_NAME "(" term+ ")" -> predicate



term : VARIABLE
      | CONSTANT
      | FUNC_NAME "(" term+ ")" -> function


VARIABLE : FOL_NAME
CONSTANT: FOL_NAME


FUNC_NAME: (LCASE_LETTER|DIGIT) ("'"|"'""_"|LETTER|DIGIT)*
PRED_NAME: (UCASE_LETTER|DIGIT) ("'"|"'""_"|LETTER|DIGIT)*


FOL_NAME: ("'"|"'""_"|LETTER|DIGIT) ("'"|"'""_"|LETTER|DIGIT)*

%import common.DIGIT
%import common.LETTER
%import common.UCASE_LETTER
%import common.LCASE_LETTER

%ignore WS
