start: node_clause+

node_clause: NODE_NAME "{"  contract+  "}"

contract: "{" TOPIC ";" TYPE ";" formula "}"

NODE_NAME: LETTER+
TOPIC: LETTER+


//ros types
TYPE: "bool"
    | "int8"
    | "uint8"
    | "int16"
    | "uint16"
    | "int32"
    | "uint32"
    | "int64"
    | "uint64"
    | "float32"
    | "float64"
    | "string"
    | "time"
    | "duration"



formula: atomic_formula -> atom
        | "not" formula -> negation
        | formula "and" formula -> and
        | formula "or" formula -> or
        | formula "->" formula -> implies
        | formula "<=>" formula -> iff
        | "(" formula ")"
        | "forall" VARIABLE formula -> forall
        | "exists" VARIABLE formula -> exists

atomic_formula  : BOOLEAN
                | term "==" term -> equals
                | term "!=" term -> not_equals
                | PRED_NAME "(" terms ")" -> predicate

BOOLEAN : "TRUE" | "FALSE"

terms : term ("," term)*

term : BOOLEAN
      | VARIABLE
      | CONSTANT
      | FUNC_NAME "(" terms ")" -> function




VARIABLE : FOL_NAME
CONSTANT: FOL_NAME


FUNC_NAME: (LCASE_LETTER|DIGIT) ("'"|"'""_"|LETTER|DIGIT)*
PRED_NAME: (UCASE_LETTER|DIGIT) ("'"|"'""_"|LETTER|DIGIT)*


FOL_NAME: ("'"|"'""_"|LETTER|DIGIT) ("'"|"'""_"|LETTER|DIGIT)*

%import common.DIGIT
%import common.LETTER
%import common.UCASE_LETTER
%import common.LCASE_LETTER


%import common.LETTER
%import common.INT -> NUMBER
%import common.WS
%ignore WS
